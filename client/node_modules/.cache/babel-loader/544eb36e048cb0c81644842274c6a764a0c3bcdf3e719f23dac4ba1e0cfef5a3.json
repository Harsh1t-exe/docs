{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\Desktop\\\\project\\\\docs\\\\client\\\\src\\\\TextEditor.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from 'react';\nimport Quill from 'quill';\nimport 'quill/dist/quill.snow.css';\nimport { useParams } from 'react-router-dom';\nimport { io } from 'socket.io-client';\nimport UsernamePrompt from './UsernamePrompt';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SAVE_INTERVAL_MS = 2000;\nconst TOOLBAR_OPTIONS = [[{\n  header: [1, 2, 3, false]\n}], ['bold', 'italic', 'underline'], [{\n  list: 'ordered'\n}, {\n  list: 'bullet'\n}], ['image', 'blockquote', 'code-block'], ['clean']];\nfunction TextEditor() {\n  _s();\n  const {\n    id: documentId\n  } = useParams();\n  const quillRef = useRef();\n  const socketRef = useRef();\n  const [username, setUsername] = useState(null);\n  const [otherCursors, setOtherCursors] = useState([]);\n  useEffect(() => {\n    if (!username) return;\n    socketRef.current = io('http://localhost:5000');\n    const quill = new Quill(quillRef.current, {\n      theme: 'snow',\n      modules: {\n        toolbar: TOOLBAR_OPTIONS\n      }\n    });\n    quill.disable();\n    quill.setText('Loading...');\n    socketRef.current.once('load-document', document => {\n      quill.setContents(document);\n      quill.enable();\n    });\n    socketRef.current.emit('get-document', documentId);\n    const handler = delta => {\n      quill.updateContents(delta);\n    };\n    socketRef.current.on('receive-changes', handler);\n    const changeHandler = (delta, oldDelta, source) => {\n      if (source !== 'user') return;\n      socketRef.current.emit('send-changes', delta);\n    };\n    quill.on('text-change', changeHandler);\n\n    // Cursor position sharing\n    const sendCursor = () => {\n      const range = quill.getSelection();\n      if (range) {\n        socketRef.current.emit('cursor-change', {\n          username,\n          range\n        });\n      }\n    };\n    quill.on('selection-change', sendCursor);\n    socketRef.current.on('other-cursor', ({\n      username: otherName,\n      range\n    }) => {\n      setOtherCursors(prev => {\n        const filtered = prev.filter(c => c.username !== otherName);\n        return [...filtered, {\n          username: otherName,\n          range\n        }];\n      });\n    });\n    const saveInterval = setInterval(() => {\n      socketRef.current.emit('save-document', quill.getContents());\n    }, SAVE_INTERVAL_MS);\n\n    // Send username to server\n    socketRef.current.emit('set-username', username);\n    return () => {\n      socketRef.current.disconnect();\n      clearInterval(saveInterval);\n    };\n  }, [documentId, username]);\n\n  // Render other users' cursors (simple highlight)\n  useEffect(() => {\n    if (!quillRef.current || !otherCursors.length) return;\n    const quill = quillRef.current.__quill || quillRef.current;\n    otherCursors.forEach(({\n      username,\n      range\n    }, idx) => {\n      if (range) {\n        quill.formatText(range.index, range.length || 1, {\n          background: '#ffeeba'\n        });\n      }\n    });\n    // Optionally clear highlights after a short time\n    const timeout = setTimeout(() => {\n      quill.removeFormat(0, quill.getLength());\n    }, 1000);\n    return () => clearTimeout(timeout);\n  }, [otherCursors]);\n  if (!username) {\n    return /*#__PURE__*/_jsxDEV(UsernamePrompt, {\n      onSubmit: setUsername\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: quillRef,\n    style: {\n      height: '100vh'\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 100,\n    columnNumber: 10\n  }, this);\n}\n_s(TextEditor, \"x+ZhKgvzQh4kW39g5RSa+hMwiNs=\", false, function () {\n  return [useParams];\n});\n_c = TextEditor;\nexport default TextEditor;\nvar _c;\n$RefreshReg$(_c, \"TextEditor\");","map":{"version":3,"names":["React","useEffect","useRef","useState","Quill","useParams","io","UsernamePrompt","jsxDEV","_jsxDEV","SAVE_INTERVAL_MS","TOOLBAR_OPTIONS","header","list","TextEditor","_s","id","documentId","quillRef","socketRef","username","setUsername","otherCursors","setOtherCursors","current","quill","theme","modules","toolbar","disable","setText","once","document","setContents","enable","emit","handler","delta","updateContents","on","changeHandler","oldDelta","source","sendCursor","range","getSelection","otherName","prev","filtered","filter","c","saveInterval","setInterval","getContents","disconnect","clearInterval","length","__quill","forEach","idx","formatText","index","background","timeout","setTimeout","removeFormat","getLength","clearTimeout","onSubmit","fileName","_jsxFileName","lineNumber","columnNumber","ref","style","height","_c","$RefreshReg$"],"sources":["C:/Users/user/Desktop/project/docs/client/src/TextEditor.js"],"sourcesContent":["\r\nimport React, { useEffect, useRef, useState } from 'react';\r\nimport Quill from 'quill';\r\nimport 'quill/dist/quill.snow.css';\r\nimport { useParams } from 'react-router-dom';\r\nimport { io } from 'socket.io-client';\r\nimport UsernamePrompt from './UsernamePrompt';\r\n\r\nconst SAVE_INTERVAL_MS = 2000;\r\nconst TOOLBAR_OPTIONS = [\r\n  [{ header: [1, 2, 3, false] }],\r\n  ['bold', 'italic', 'underline'],\r\n  [{ list: 'ordered' }, { list: 'bullet' }],\r\n  ['image', 'blockquote', 'code-block'],\r\n  ['clean']\r\n];\r\n\r\nfunction TextEditor() {\r\n  const { id: documentId } = useParams();\r\n  const quillRef = useRef();\r\n  const socketRef = useRef();\r\n  const [username, setUsername] = useState(null);\r\n  const [otherCursors, setOtherCursors] = useState([]);\r\n\r\n  useEffect(() => {\r\n    if (!username) return;\r\n    socketRef.current = io('http://localhost:5000');\r\n    const quill = new Quill(quillRef.current, {\r\n      theme: 'snow',\r\n      modules: { toolbar: TOOLBAR_OPTIONS }\r\n    });\r\n    quill.disable();\r\n    quill.setText('Loading...');\r\n\r\n    socketRef.current.once('load-document', document => {\r\n      quill.setContents(document);\r\n      quill.enable();\r\n    });\r\n    socketRef.current.emit('get-document', documentId);\r\n\r\n    const handler = delta => {\r\n      quill.updateContents(delta);\r\n    };\r\n    socketRef.current.on('receive-changes', handler);\r\n\r\n    const changeHandler = (delta, oldDelta, source) => {\r\n      if (source !== 'user') return;\r\n      socketRef.current.emit('send-changes', delta);\r\n    };\r\n    quill.on('text-change', changeHandler);\r\n\r\n    // Cursor position sharing\r\n    const sendCursor = () => {\r\n      const range = quill.getSelection();\r\n      if (range) {\r\n        socketRef.current.emit('cursor-change', { username, range });\r\n      }\r\n    };\r\n    quill.on('selection-change', sendCursor);\r\n\r\n    socketRef.current.on('other-cursor', ({ username: otherName, range }) => {\r\n      setOtherCursors(prev => {\r\n        const filtered = prev.filter(c => c.username !== otherName);\r\n        return [...filtered, { username: otherName, range }];\r\n      });\r\n    });\r\n\r\n    const saveInterval = setInterval(() => {\r\n      socketRef.current.emit('save-document', quill.getContents());\r\n    }, SAVE_INTERVAL_MS);\r\n\r\n    // Send username to server\r\n    socketRef.current.emit('set-username', username);\r\n\r\n    return () => {\r\n      socketRef.current.disconnect();\r\n      clearInterval(saveInterval);\r\n    };\r\n  }, [documentId, username]);\r\n\r\n  // Render other users' cursors (simple highlight)\r\n  useEffect(() => {\r\n    if (!quillRef.current || !otherCursors.length) return;\r\n    const quill = quillRef.current.__quill || quillRef.current;\r\n    otherCursors.forEach(({ username, range }, idx) => {\r\n      if (range) {\r\n        quill.formatText(range.index, range.length || 1, { background: '#ffeeba' });\r\n      }\r\n    });\r\n    // Optionally clear highlights after a short time\r\n    const timeout = setTimeout(() => {\r\n      quill.removeFormat(0, quill.getLength());\r\n    }, 1000);\r\n    return () => clearTimeout(timeout);\r\n  }, [otherCursors]);\r\n\r\n  if (!username) {\r\n    return <UsernamePrompt onSubmit={setUsername} />;\r\n  }\r\n  return <div ref={quillRef} style={{ height: '100vh' }} />;\r\n}\r\n\r\nexport default TextEditor;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}